#pragma checksum "E:\DiffCheckWeb\DiffCheckWeb\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4bba3e0e7de6bcbe4175bb10a008ebc53808bd1c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\DiffCheckWeb\DiffCheckWeb\Views\_ViewImports.cshtml"
using DiffCheckWeb;

#line default
#line hidden
#line 2 "E:\DiffCheckWeb\DiffCheckWeb\Views\_ViewImports.cshtml"
using DiffCheckWeb.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4bba3e0e7de6bcbe4175bb10a008ebc53808bd1c", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c532954a859fa5f1f94ebaaace856df60a64357c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/codemirror.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/codemirror.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/diff_match_patch_uncompressed.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/javascript.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("#"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onsubmit", new global::Microsoft.AspNetCore.Html.HtmlString("return false"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 112, true);
            WriteLiteral("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<HTML>\r\n");
            EndContext();
            BeginContext(112, 71, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("HEAD", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "444c69ecfd634c06b9a38d7ac480326d", async() => {
                BeginContext(118, 58, true);
                WriteLiteral("\r\n    <TITLE>Diff, Match and Patch: Demo of Diff</TITLE>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(183, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(187, 14363, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("BODY", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "031fa83414cd4b7597a6d428f901c4ca", async() => {
                BeginContext(193, 492, true);
                WriteLiteral(@"
    <H1>Diff, Match and Patch</H1>
    <H2>Demo of Diff</H2>

    <P>
        Diff takes two texts and finds the differences.  This implementation works on a character by character basis.
        The result of any diff may contain 'chaff', irrelevant small commonalities which complicate the output.
        A post-diff cleanup algorithm factors out these trivial commonalities.
    </P>
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.js""></script>
    ");
                EndContext();
                BeginContext(685, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "22b940134f864d09a8bf8f02544a19db", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(728, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(734, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0529a37a85b446b6a45fd84aa5b1e1f5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(787, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(793, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95296f2adcde4cd5af033d3c51897a94", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(854, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(860, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2cdc8264546b436f807b51e483a10509", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(903, 12593, true);
                WriteLiteral(@"
    <style>
        li{
            list-style:decimal;
        }
    </style>
    <SCRIPT>
        $(document).ready(function () {
            var myCodeMirror1 = CodeMirror.fromTextArea(document.getElementById('text1'), {
                lineNumbers: true
            });

            var myCodeMirror2 = CodeMirror.fromTextArea(document.getElementById('text2'), {
                lineNumbers: true
            });

            myCodeMirror2.setSize(300, 300)
            myCodeMirror1.setSize(300,300)
           
            var addition = 0;
            var _delete = 0;

            diff_prettyHtml = function (obj) {
                var mainDiv = document.createElement(""div"") //main outer container div top most
                        var appendTosameElement = false;

                var stillsame = false;
                        var preId = 0;

                        for (var i = 0; i < obj.length; i++) {

                            var operation = obj[i]['operation'];
     ");
                WriteLiteral(@"                       var text = obj[i]['text'];

                            debugger;
                            alreadyIncluded = false;
                            if (operation == ""0"") {
                                _delete +=1
                            }
                            if (operation != ""10"") {
                            var para = document.createElement(""li"");
                            para.id = i;

                            var pattern_amp = /&/g;
                            var pattern_lt = /</g;
                            var pattern_gt = />/g;
                                var pattern_para = /\n/g;


                            var text = text.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;').replace(pattern_gt, '&gt;').replace(pattern_para, '<br>');
                            var listOfText = [];

                            if (text.includes(""<br>"") == true) {
                                listOfText = text.split(""<br>"")
                ");
                WriteLiteral(@"                appendTosameElement = true;
                                
                                
                                for (var j = 0; j < listOfText.length; j++) {
                                    para = document.getElementById(preId);
                                    if (appendTosameElement) {
                                        if (operation == ""1"") {
                                            para.style.cssText='color:transparent; background:grey'
                                        }
                                        para.innerHTML += listOfText[j];
                                        appendTosameElement = false;//ethe v kuch lao
                                        stillsame = true;
                                        
                                    } else {
                                        preId = preId + 1;
                                        

                                        var updateLi = document.createE");
                WriteLiteral(@"lement(""li"");
                                        updateLi.id = preId;
                                        updateLi.innerHTML = listOfText[j];
                                        document.getElementById('outputdiv').appendChild(updateLi);

                                        alreadyIncluded = true;
                                    }
                                }


                            }


                                if (appendTosameElement && !alreadyIncluded && operation != ""1"" && !stillsame) {

                                para = document.getElementById(preId);
                                para.innerHTML += '<span style=""background:red"">'+text+'</span>';
                                appendTosameElement = true;
                                }

                                if (appendTosameElement && !alreadyIncluded && operation == ""1"" && !stillsame) {

                                para = document.getElementById(preId);
                ");
                WriteLiteral(@"                para.innerHTML += '<span style=""color:transparent; background:grey"">'+text+'</span>';
                                appendTosameElement = true;
                            }


                                if (operation == '2' && appendTosameElement == false && alreadyIncluded == false && !stillsame) {
                                para.innerHTML += text;
                                document.getElementById('outputdiv').appendChild(para);
                                appendTosameElement = true;
                                }
                                if (operation == '0' && appendTosameElement == false && alreadyIncluded == false && !stillsame) {
                                para.innerHTML += '<span style=""background:red"">'+text+'</span>';
                                document.getElementById('outputdiv').appendChild(para);
                                appendTosameElement = true;
                                }

                                if ");
                WriteLiteral(@"(operation == '0' && appendTosameElement == false && alreadyIncluded == false && stillsame) {
                                    para = document.getElementById(preId);
                                    para.innerHTML += '<span style=""background:red"">'+text+'</span>';
                                    appendTosameElement = true;
                                    stillsame = false;

                            }

                            }
                        }
            };




            diff_prettyHtml1 = function (obj) {
                var mainDiv = document.createElement(""div"") //main outer container div top most
                        var appendTosameElement = false;
                        var stillsame = false;
                        var preId = 0;
                        

                        for (var i = 0; i < obj.length; i++) {

                            var operation = obj[i]['operation'];
                            var text = obj[i]['text'];

  ");
                WriteLiteral(@"                          if (operation == ""1"") {
                            addition += 1
                            }

                            debugger;
                            alreadyIncluded = false;
                            if (operation != ""0"") {
                            var para = document.createElement(""li"");
                            para.id = i;

                            var pattern_amp = /&/g;
                            var pattern_lt = /</g;
                            var pattern_gt = />/g;
                                var pattern_para = /\n/g;


                            var text = text.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;').replace(pattern_gt, '&gt;').replace(pattern_para, '<br>');
                            var listOfText = [];

                            if (text.includes(""<br>"") == true) {
                                listOfText = text.split(""<br>"")
                                appendTosameElement = true;
           ");
                WriteLiteral(@"                     
                                
                                for (var j = 0; j < listOfText.length; j++) {
                                    para = document.getElementById(preId);
                                    if (appendTosameElement) {
                                        if (operation == ""1"") {
                                            para.style.cssText='background:#6bdfb8'
                                        }
                                        para.innerHTML += listOfText[j];
                                        appendTosameElement = false;
                                        stillsame = true;
                                    } else {
                                        preId = preId + 1;
                                        var newpara = document.createElement(""li"");
                                        newpara.id = ""leaveBank"";
                                        newpara.innerHTML += "" "";
                           ");
                WriteLiteral(@"             //document.getElementById('newdiv').appendChild(newpara);

                                        var updateLi = document.createElement(""li"");
                                        updateLi.id = preId;
                                        updateLi.innerHTML = listOfText[j];
                                        document.getElementById('newdiv').appendChild(updateLi);

                                        alreadyIncluded = true;
                                    }
                                }


                            }


                            if (appendTosameElement && !alreadyIncluded) {

                                para = document.getElementById(preId);
                                para.innerHTML += '<span style=""background:#6bdfb8"">'+text+'</span>';
                                appendTosameElement = true;
                            }


                            if (operation == '2' && appendTosameElement == false && alreadyInclude");
                WriteLiteral(@"d == false && !stillsame) {
                                para.innerHTML += text;
                                document.getElementById('newdiv').appendChild(para);
                                appendTosameElement = true;
                                }
                                if (operation == '1' && appendTosameElement == false && alreadyIncluded == false && !stillsame) {
                                para.innerHTML += text;
                                para.style.cssText = 'background:#6bdfb8'
                                document.getElementById('newdiv').appendChild(para);
                                appendTosameElement = true;
                                }

                                 if (operation == '1' && appendTosameElement == false && alreadyIncluded == false && stillsame) {
                                    para = document.getElementById(preId);
                                    para.innerHTML += '<span style=""background:#6bdfb8"">'+text+'</span");
                WriteLiteral(@">';
                                    appendTosameElement = true;
                                    stillsame = false;

                            }

                            }
                        }
            };




            function escapeXML(string) {

                var str = string;
                str = str.replace(/\&/g, ""&amp;"");
                str = str.replace(/\>/g, ""&gt;"");
                str = str.replace(/\</g, ""&lt;"");
                str = str.replace(/\""/g, ""&quot;"");
                str = str.replace(/\'/g, ""&apos;"");

                return str;
            }

            

            $(""#btnSubmit"").click(launch);

            function launch() {

                
                $(""#newdiv"").empty();
                $('#outdiv').empty();

                var text1 = myCodeMirror1.getValue();// document.getElementById('text1').value;
                var text2 = myCodeMirror2.getValue();//document.getElementById('text2').value;

    ");
                WriteLiteral(@"            var processText1 = escapeXML(text1);
                var processText2 = escapeXML(text2);
                var textdata = '<JobModel xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema""><JobClass><Job><title>' + processText1 + '</title><description></description></Job><Job><title>' + processText2 + '</title><description></description></Job></JobClass></JobModel>';
                debugger;
                $.ajax({
                    url: ""../../Home/ComputeDiff"",
                    type: ""POST"",
                    processData: false,
                    data: textdata,
                    contentType: ""text/xml"",
                    success: function (response, textStatus, jqXHR) {
                        
                        
                        var obj = JSON.parse(response);
                        diff_prettyHtml1(obj);
                        diff_prettyHtml(obj);

                        document.getElementById('additio");
                WriteLiteral(@"n').innerHTML = addition
                        document.getElementById('delete').innerHTML = _delete



                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                    }
                });
            };

        });
    </SCRIPT>

    ");
                EndContext();
                BeginContext(13496, 550, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("FORM", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8d25bb1fa915497a8c93e1be98890bd5", async() => {
                    BeginContext(13537, 502, true);
                    WriteLiteral(@"
        <TABLE WIDTH=""100%"">
            <TR>
                <TD WIDTH=""50%"">
                    <H3>Text Version 1:</H3>
<TEXTAREA ID=""text1"" STYLE=""width: 100%"" rows=""10""></TEXTAREA>
                </TD>
                <TD WIDTH=""50%"">
                    <H3>Text Version 2:</H3>
<TEXTAREA ID=""text2"" STYLE=""width: 100%"" rows=""10""></TEXTAREA>
                </TD>
            </TR>
        </TABLE>

        <P><INPUT id=""btnSubmit"" TYPE=""button""  VALUE=""Compute Diff""></P>
    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14046, 497, true);
                WriteLiteral(@"

    <div class=""row"">

        <div class=""col-md-6"">
        <span id=""delete""></span>Deletions</div>
        <div class=""col-md-6"">
            <span id=""addition""></span> Additions
        </div>


    </div>


    <div class=""row"">
        <div class=""col-md-6"">
            <ul ID=""outputdiv""></ul>
            
        </div>

        <div class=""col-md-6"">
            <ul ID=""newdiv"" ></ul>
                </div>
            </div>
        

        <HR>


");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14550, 11, true);
            WriteLiteral("\r\n</HTML>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
