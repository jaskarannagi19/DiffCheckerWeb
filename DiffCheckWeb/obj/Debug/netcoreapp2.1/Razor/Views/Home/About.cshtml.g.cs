#pragma checksum "E:\DiffCheckWeb\DiffCheckWeb\Views\Home\About.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c41f642909d42326ca2ad682e4b385de9d8fb302"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_About), @"mvc.1.0.view", @"/Views/Home/About.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/About.cshtml", typeof(AspNetCore.Views_Home_About))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\DiffCheckWeb\DiffCheckWeb\Views\_ViewImports.cshtml"
using DiffCheckWeb;

#line default
#line hidden
#line 2 "E:\DiffCheckWeb\DiffCheckWeb\Views\_ViewImports.cshtml"
using DiffCheckWeb.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c41f642909d42326ca2ad682e4b385de9d8fb302", @"/Views/Home/About.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c532954a859fa5f1f94ebaaace856df60a64357c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_About : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 3944, true);
            WriteLiteral(@"
<!doctype html>

<title>CodeMirror: merge view demo</title>
<meta charset=""utf-8""/>
<link rel=stylesheet href=""../doc/docs.css"">

<link rel=stylesheet href=""../lib/codemirror.css"">
<link rel=stylesheet href=""../addon/merge/merge.css"">
<script src=""../lib/codemirror.js""></script>
<script src=""../mode/xml/xml.js""></script>
<script src=""../mode/css/css.js""></script>
<script src=""../mode/javascript/javascript.js""></script>
<script src=""../mode/htmlmixed/htmlmixed.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/diff_match_patch/20121119/diff_match_patch.js""></script>
<script src=""../addon/merge/merge.js""></script>

<div id=nav>
  <a href=""https://codemirror.net""><h1>CodeMirror</h1><img id=logo src=""../doc/logo.png""></a>

  <ul>
    <li><a href=""../index.html"">Home</a>
    <li><a href=""../doc/manual.html"">Manual</a>
    <li><a href=""https://github.com/codemirror/codemirror"">Code</a>
  </ul>
  <ul>
    <li><a class=active href=""#"">merge view</a>
  </ul>
</div>

<artic");
            WriteLiteral(@"le>
<h2>merge view demo</h2>


<div id=view></div>

<p>The <a href=""../doc/manual.html#addon_merge""><code>merge</code></a>
addon provides an interface for displaying and merging diffs,
either <span class=clicky onclick=""panes = 2; initUI()"">two-way</span>
or <span class=clicky onclick=""panes = 3; initUI()"">three-way</span>.
The left (or center) pane is editable, and the differences with the
other pane(s) are <span class=clicky
onclick=""toggleDifferences()"">optionally</span> shown live as you edit
it. In the two-way configuration, there are also options to pad changed
sections to <span class=clicky onclick=""connect = connect ? null :
'align'; initUI()"">align</span> them, and to <span class=clicky
onclick=""collapse = !collapse; initUI()"">collapse</span> unchanged
stretches of text.</p>

<p>This addon depends on
the <a href=""https://code.google.com/p/google-diff-match-patch/"">google-diff-match-patch</a>
library to compute the diffs.</p>

<script>
var value, orig1, orig2, dv, panes = 2, hi");
            WriteLiteral(@"ghlight = true, connect = ""align"", collapse = false;
function initUI() {
  if (value == null) return;
  var target = document.getElementById(""view"");
  target.innerHTML = """";
  dv = CodeMirror.MergeView(target, {
    value: value,
    origLeft: panes == 3 ? orig1 : null,
    orig: orig2,
    lineNumbers: true,
    mode: ""text/html"",
    highlightDifferences: highlight,
    connect: connect,
    collapseIdentical: collapse
  });
}

function toggleDifferences() {
  dv.setShowDifferences(highlight = !highlight);
}

window.onload = function() {
  value = document.documentElement.innerHTML;
  orig1 = ""<!doctype html>\n\n"" + value.replace(/\.\.\//g, ""codemirror/"").replace(""yellow"", ""orange"");
  orig2 = value.replace(/\u003cscript/g, ""\u003cscript type=text/javascript "")
    .replace(""white"", ""purple;\n      font: comic sans;\n      text-decoration: underline;\n      height: 15em"");
  initUI();
  let d = document.createElement(""div""); d.style.cssText = ""width: 50px; margin: 7px; height: 14");
            WriteLiteral(@"px""; dv.editor().addLineWidget(57, d)
};

function mergeViewHeight(mergeView) {
  function editorHeight(editor) {
    if (!editor) return 0;
    return editor.getScrollInfo().height;
  }
  return Math.max(editorHeight(mergeView.leftOriginal()),
                  editorHeight(mergeView.editor()),
                  editorHeight(mergeView.rightOriginal()));
}

function resize(mergeView) {
  var height = mergeViewHeight(mergeView);
  for(;;) {
    if (mergeView.leftOriginal())
      mergeView.leftOriginal().setSize(null, height);
    mergeView.editor().setSize(null, height);
    if (mergeView.rightOriginal())
      mergeView.rightOriginal().setSize(null, height);

    var newHeight = mergeViewHeight(mergeView);
    if (newHeight >= height) break;
    else height = newHeight;
  }
  mergeView.wrap.style.height = height + ""px"";
}
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
